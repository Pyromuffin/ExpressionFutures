Existing gaps in C# expression tree support
===========================================

Obtained by `findstr ExpressionTree` in Compilers\CSharp\Portable\CSharpResources.resx
See Compilers\CSharp\Portable\Lowering\DiagnosticsPass_ExpressionTrees.cs for usages of these

[IGNR] ERR_PartialMethodInExpressionTree
       - () => PartialMethod()
       - Valid restriction

[IGNR] ERR_ExpressionTreeContainsBaseAccess
       - () => base.Foo()
       - Valid restriction

[OPEN] ERR_ExpressionTreeContainsAssignment
       - () => a = 42
       - To be revisited if/when we add statement support

[OPEN] ERR_StatementLambdaToExpressionTree
       - () => { ... }
       - To be revisited if/when we add statement support

[IGNR] ERR_ExpressionTreeMustHaveDelegate
       - Expression<int> f = ...
       - Valid restriction

[DONE] ERR_ExpressionTreeContainsMultiDimensionalArrayInitializer
       - () => new int[2, 2] { { 1, 2 }, { 3, 4 } }
       - Can be lifted by adding a new ArrayInit node

[OPEN] ERR_ExpressionTreeContainsBadCoalesce
       - () => null ?? "bar"
       - Strange restriction, to be investigated

[IGNR] ERR_ExpressionTreeContainsPointerOp
       - () => &x
       - Valid restriction

[OPEN] ERR_ExpressionTreeContainsAnonymousMethod
       - () => X(delegate { ... })
       - To be revisited if/when we add statement support

[OPEN] ERR_AnonymousMethodToExpressionTree
       - Expression<F> f = delegate { ... }
       - To be revisited if/when we add statement support

[OPEN] ERR_ByRefParameterInExpressionTree
       - (ref int x) => ...
       - To be investigated where the trickiness comes from

[IGNR] ERR_VarArgsInExpressionTree
       - Reasonable restriction

[IGNR] ERR_MemGroupInExpressionTree
       - () => Console.WriteLine
       - Reasonable restriction; has no type of its own

[IGNR] ERR_ComRefCallInExpressionTree
       - Resonable restriction

[OPEN] ERR_ExpressionTreeContainsDynamicOperation
       - (dynamic d) => d.Foo()
       - To be revisited if/when we add dynamic support

[DONE] ERR_BadAsyncExpressionTree
       - async () => await x
       - To be revisited if/when we async/await support

[DONE] ERR_ExpressionTreeContainsNamedArgument
       - () => Bar(x: 1)
       - Can be lifted by adding new nodes

[DONE] ERR_ExpressionTreeContainsOptionalArgument
       - () => Bar(/*omitted argument*/)
       - Can be lifted by adding new nodes; design question whether to resolve the default value at compile time or at runtime

[OPEN] ERR_ExpressionTreeContainsIndexedProperty
       - Reasonable restriction; applies to COM interop only?

[IGNR] ERR_FeatureNotValidInExpressionTree
       - Applies for any of those: __reftype, __refvalue, __makeref
       - Reasonable restriction

[OPEN] ERR_NullPropagatingOpInExpressionTree
       - Can be lifted by adding new nodes

[OPEN] ERR_DictionaryInitializerInExpressionTree
       - Can be lifted by adding new nodes; trickiness with MemberInit / MemberBinding not being extensible

[OPEN] ERR_ExtensionCollectionElementInitializerInExpressionTree
       - Can be lifted by adding new nodes; trickiness with ListInt / ElementInit not being extensible